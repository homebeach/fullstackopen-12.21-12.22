version: "3.8"

services:
  # Backend Service
  backend:
    build:
      context: ./bloglist-backend
      dockerfile: Dockerfile # Use the production Dockerfile
    container_name: bloglist-backend
    environment:
      - NODE_ENV=production
    expose:
      - "3001" # Expose only to other services within the Docker network
    networks:
      - app-network
    depends_on:
      - mongodb
    restart: on-failure

  # Frontend Service
  frontend:
    build:
      context: ./bloglist-frontend
      dockerfile: Dockerfile # Use the production Dockerfile
    container_name: bloglist-frontend
    environment:
      - NODE_ENV=production
    expose:
      - "3000" # Expose only to other services within the Docker network
    networks:
      - app-network
    restart: on-failure

  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: bloglist-mongo
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    restart: on-failure

  # Nginx Service (Reverse Proxy)
  nginx:
    image: nginx:latest
    container_name: bloglist-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./bloglist-frontend/build:/usr/share/nginx/html # Serve the frontend build files
    ports:
      - "8080:80" # Expose only port 80 to the host machine
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: on-failure

# Named Volumes
volumes:
  mongo-data:

# Networks
networks:
  app-network:
    driver: bridge
